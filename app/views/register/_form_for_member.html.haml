%nav.filtering_prefixes
  %form{:method => 'get'}
    = hidden_field_tags_from_nested_hash @saved_params

    - current_last_name_prefix = @members_filtering_values[:last_name]
    = filter_by_prefix_button_set :last_name, 'A'..'Z',
                                  current_last_name_prefix,
                                  'filter'

%form{ :id     => (filter_form_id = 'member_list_filter'),
       :method => :get }
  = hidden_field_tags_from_nested_hash @saved_params

%form{ :id     => (clear_filter_form_id = 'member_list_clear_filter'),
       :method => :get }
  = hidden_field_tags_from_nested_hash @saved_params.except(:filter)

%table#member_list_attributes.records.filter{ :class => (@members_filtering_values.blank? ? nil : 'filtered ') }
  %colgroup.attributes
    - @member_attributes.size.times do
      %col
  %thead
    %tr
      - @member_attributes.each do |attr|
        %th{ :class => html_class_from_column_type(Member.column_db_type(attr)) }<
          = sortable 'member_list_attributes', attr,
                     Member.human_column_header(attr)

    %tr
      - @member_attributes.each do |attr|

        = render 'shared/tables/filtering_field',
                 :filter_form_id  => filter_form_id,
                 :attr            => attr,
                 :select_from     => Accessors::Member.possible_values_of(attr),
                 :column_type     => Member.column_db_type(attr),
                 :value_or_values => @members_filtering_values[attr]

    %tr
      %td.actions{ :colspan => @member_attributes.size }
        %button{ :form  => filter_form_id,
                 :name  => 'button',
                 :type  => 'submit',
                 :value => 'filter' }
          = t('buttons.filter')
        %button{ :form  => clear_filter_form_id,
                 :name  => 'button',
                 :type  => 'submit',
                 :value => 'filter' }
          = t('buttons.clear')
    - unless @members_filtering_values.blank?
      %tr
        - @member_attributes.each do |attr|
          - if (val = @members_filtering_values[attr]).blank?
            %td
          - else
            - column_type = Member.column_db_type(attr)
            - html_class = html_class_from_column_type(column_type)
            %td.filtering_value{ :class => html_class }
              = formatted_filtering_value val, column_type

-# end # </table>

%form{:method => :get}
  = hidden_field_tags_from_nested_hash @saved_params

  %label{:for => :per_page}
    = t('field_labels.per_page')
  %select.number{ :name => :per_page }
    = options_for_select [5, 10, 25, 50, 100, 250, 500, 1000],
                         params[:per_page] || Member.default_per_page
  %span.actions
    %button{ :name  => 'button',
             :type  => 'submit',
             :value => 'repaginate' }
      = t('buttons.repaginate')

= paginate @members

%ul.compact
  - @members.each do |member|
    %li
      = link_to select_pictogram + " #{member.ordered_full_name} (#{member.payed_tickets_count + member.free_tickets_count})",
                { :action    => :new_member_transaction,
                  :member_id => member.id },
                :class => 'select resource'

= paginate @members
