%h1= t '.header'

-# NOTE: this is currently not used, but i wonder if it can eventually replace
-# two or more forms (paginating, filtering, etc.)
%form#reload{:method => 'get'}
  = hidden_fields_from_nested_hash @saved_params

%form{:method => 'get'}
  %label
    = t 'formats.attribute_name:',
        :attribute => t('register.new_entry.current_event')
    = @event ? @event.virtual_long_title : 'âˆ…'
  = select_tag :event_id,
      options_from_collection_for_select(@events,
        :id, :virtual_long_title,
        :selected    => @event ? @event.id : nil ),
      :include_blank => true

  %span.actions
    %button{ :name  => 'button',
             :value => 'select_current_event',
             :type  => 'submit',
             :class => 'preselect' }
      = t('buttons.change')

%section
  %h2= t '.choose_member'
  - attributes = @members_attributes
  - column_types = @members_column_types
  - column_headers = @members_column_headers

  %nav.filtering_prefixes
    %form{:method => 'get'}
      = hidden_fields_from_nested_hash @saved_params

      - current_last_name_prefix = @members_filtering_values[:last_name]
      = filter_by_prefix_button_set :last_name, 'A'..'Z',
                                    current_last_name_prefix,
                                    'filter'

  %form{ :id     => (filter_form_id = 'member_list_filter'),
         :method => :get }
    = hidden_fields_from_nested_hash @saved_params

  %form{ :id     => (clear_filter_form_id = 'member_list_clear_filter'),
         :method => :get }
    = hidden_fields_from_nested_hash @saved_params.except(:filter)

  %table{ :id    => 'member_list_attributes',                             |
          :class => (@members_filtering_values.blank? ? '' : 'filtered ') |
                      + 'records filter'}                                 |
    %colgroup.attributes
      - attributes.size.times do
        %col
    %thead
      %tr
        - attributes.each do |attr|

          = render 'shared/tables/sorting_header',
                   :attribute     => attr,
                   :column_type   => column_types[attr],
                   :column_header => column_headers[attr],
                   :html_table_id => 'member_list_attributes'

      %tr
        - attributes.each do |attr|

          = render 'shared/tables/filtering_field',
                   :filter_form_id  => filter_form_id,
                   :attr            => attr,
                   :select_from     => Accessors::Member.possible_values_of(attr),
                   :column_type     => column_types[attr],
                   :value_or_values => @members_filtering_values[attr]

      %tr
        %td{:colspan => attributes.size, :class => 'actions'}
          %button{ :form  => filter_form_id,
                   :name  => 'button',
                   :type  => 'submit',
                   :value => 'filter' }
            = t('buttons.filter')
          %button{ :form  => clear_filter_form_id,
                   :name  => 'button',
                   :type  => 'submit',
                   :value => 'filter' }
            = t('buttons.clear')
      - unless @members_filtering_values.blank?
        %tr
          - attributes.each do |attr|

            = render 'shared/tables/filtering_value',
                     :value_or_values => @members_filtering_values[attr],
                     :column_type     => column_types[attr]

  -# end # </table>

  %form{:method => :get}
    = hidden_fields_from_nested_hash @saved_params

    %label{:for => :per_page}
      = t('field_labels.per_page')
    %select{:name => :per_page, :class => 'number'}
      = options_for_select [5, 10, 25, 50, 100, 250, 500, 1000],
                           params[:per_page] || Member.default_per_page
    %span.actions
      %button{ :name  => 'button',
               :type  => 'submit',
               :value => 'repaginate' }
        = t('buttons.repaginate')

  = paginate @members

  %ul.compact
    - @members.each do |member|
      %li
        = link_to select_pictogram + " #{member.ordered_full_name} (#{member.payed_tickets_count + member.free_tickets_count})",
                  { :action    => :new_member_transaction,
                    :member_id => member.id },
                  :class => 'select resource'

  = paginate @members

%section
  %h2= t '.enter_guest'

  = render 'form_for_guest'

= render('event_participants') if @event
