-# Locals:
-#   models:
-#   attributes:
-#   column_types:
-#   column_headers:
-#   html_table_id:
-#   filtering_values:

- klass = models.klass

= form_tag(nil, :method => :get) do
  = hidden_field_tags_from_hash params.slice(:filter, :sort)

  = label_tag :per_page, t('field_labels.per_page')
  = select_tag :per_page,
                 options_for_select([5, 10, 25, 50, 100, 250, 500, 1000],
                                    params[:per_page] || klass.default_per_page),
                 :class => 'number'
  %span.actions
    = hidden_field_tag :query_type, 'repaginate'
    = content_tag :button,
                  t('buttons.repaginate'),
                  :name  => 'button',
                  :type  => 'submit',
                  :value => 'repaginate_button'

= paginate models

= form_tag(nil, :id     => (filter_form_id = "#{html_table_id}_filter"),
                :method => :get) do
  = hidden_field_tags_from_hash params.merge( :query_type => 'filter' )
  -# Other input fields are outside, with the help of "form" HTML attribute

= content_tag :table,                                                  |
              :id    => html_table_id,                                 |
              :class => (filtering_values.blank? ? '' : 'filtered ') + |
              'records' do                                             |
  %colgroup.attributes
    - attributes.size.times do
      %col
  %colgroup
    %col
    %col
  %thead
    %tr
      - attributes.each do |attr|

        = render 'shared/tables/sorting_header',
                 :attribute     => attr,
                 :column_type   => column_types[attr],
                 :column_header => column_headers[attr],
                 :html_table_id => html_table_id

      %th.empty
      %th.empty
    %tr
      - attributes.each do |attr|

        = render 'shared/tables/filtering_field',
                 :filter_form_id  => filter_form_id,
                 :attr            => attr,
                 :select_from     => klass.possible_values_of(attr),
                 :column_type     => column_types[attr],
                 :value_or_values => filtering_values[attr]

      %td.empty
      %td.empty
    %tr
      = content_tag :td, :colspan => attributes.size,
                         :class   => 'actions' do
        = hidden_field_tag :query_type, 'filter', :form  => filter_form_id
        = content_tag :button,
                      t('buttons.filter'),
                      :form  => filter_form_id,
                      :name  => 'button',
                      :type  => 'submit',
                      :value => 'filter_button'
        = content_tag :button,
                      t('buttons.clear'),
                      :form  => filter_form_id,
                      :name  => 'button',
                      :type  => 'submit',
                      :value => 'clear_button'
      %td.empty
      %td.empty
    - unless filtering_values.blank?
      %tr
        - attributes.each do |attr|

          = render 'shared/tables/filtering_value',
                   :value_or_values => filtering_values[attr],
                   :column_type     => column_types[attr]

        %td.empty
        %td.empty

  = render 'shared/tables/index_body',
           :models       => models,
           :attributes   => attributes,
           :column_types => column_types

-# end # </table>

= paginate models
