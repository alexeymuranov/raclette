-# Locals:
-#   attributes:
-#   column_types (optional):
-#   column_headers (optional):
-#   html_table_id:
-#   collection:
-#   selected_objects (optional):
-#   id_prefix:
-#   array_name:
-#   model (optional):

- model ||= collection.klass

-# It is assumed here that PseudoColumns module is included
- column_types ||= model.column_db_types

-# It is assumed here that AbstractHumanizedModel module is included
- column_headers ||= model.human_column_headers

- selected_objects ||= nil

- unselected_objects = selected_objects ? collection - selected_objects : collection

%table.form_fields
  %colgroup
    %col
  %colgroup.attributes
    - attributes.size.times do
      %col

  %thead
    %tr
      %th.empty.boolean

      - attributes.each do |attr|
        %th{ :class => html_class_from_column_type(column_types[attr]) }<
          = column_headers[attr]

  %tbody
    - unless selected_objects.nil?
      - selected_objects.each do |obj|
        %tr.field
          %td.boolean
            = check_box_tag array_name + '[]', obj.id, true,
                            :id => id_prefix + "_#{ obj.id }"

          = render 'shared/forms/attributes_in_selection_index',
                   :object       => obj,
                   :attributes   => attributes,
                   :column_types => column_types,
                   :id_prefix    => id_prefix

    - unless unselected_objects.nil?
      - unselected_objects.each do |obj|
        %tr.field
          %td.boolean
            = check_box_tag array_name+'[]', obj.id, false,
                            :id => id_prefix + "_#{ obj.id }"

          = render 'shared/forms/attributes_in_selection_index',
                   :object       => obj,
                   :attributes   => attributes,
                   :column_types => column_types,
                   :id_prefix    => id_prefix
