-# Locals:
-#   attributes:
-#   column_types (optional):
-#   column_headers (optional):
-#   html_table_id:
-#   models:
-#   selected_models (optional):
-#   id_prefix:
-#   array_name:
-#   klass (optional):

- klass ||= models.klass

-# It is assumed here that PseudoColumns module is included
- column_types ||= klass.column_db_types

-# It is assumed here that AbstractHumanizedModel module is included
- column_headers ||= klass.human_column_headers

- selected_models ||= nil

- unselected_models = selected_models ? models - selected_models : models

%table.form_fields
  %colgroup
    %col
  %colgroup.attributes
    - attributes.size.times do
      %col

  %thead
    %tr
      %th.empty.boolean

      - attributes.each do |attr|
        %th{ :class => html_class_from_column_type(column_types[attr]) }<
          = column_headers[attr]

  %tbody
    - unless selected_models.nil?
      - selected_models.each do |mod|
        %tr.field
          %td.boolean
            = check_box_tag array_name + '[]', mod.id, true,
                            :id => id_prefix + "_#{mod.id}"

          = render 'shared/forms/attributes_in_selection_index',
                   :model        => mod,
                   :attributes   => attributes,
                   :column_types => column_types,
                   :id_prefix    => id_prefix

    - unless unselected_models.nil?
      - unselected_models.each do |mod|
        %tr.field
          %td.boolean
            = check_box_tag array_name+'[]', mod.id, false,
                            :id => id_prefix + "_#{mod.id}"

          = render 'shared/forms/attributes_in_selection_index',
                   :model        => mod,
                   :attributes   => attributes,
                   :column_types => column_types,
                   :id_prefix    => id_prefix
