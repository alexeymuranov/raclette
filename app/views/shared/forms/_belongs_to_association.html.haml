-# Locals:
-#   form_builder:
-#   association:
-#   association_name_attribute:
-#   collection (optional):
-#   input_html_options (optional):

- collection         = nil unless local_assigns.key? :collection
- input_html_options = {}  unless local_assigns.key? :input_html_options

- model = form_builder.object
- klass = model.class

-# XXX: using undocumented ActiveRecord::Reflection module methods, for example
-# #association_foreign_key
- assoc_reflection = klass.reflect_on_association(association)
- foreign_key = assoc_reflection.association_foreign_key
- required = klass.attr_required?(foreign_key)

- input_html_options[:required] = 'required' if required
- editable = model.attr_editable?(foreign_key)

.item.field
  - human_name = klass.human_attribute_name(association)
  - label_content = t('formats.attribute_name:', :attribute => human_name)

  - if editable
    %dt
      = form_builder.label foreign_key, label_content
    %dd.list
      = form_builder.select_for_belongs_to association,
                                           association_name_attribute,
                                           collection,
                                           { :include_blank => !required },
                                           input_html_options
  - else
    %dt
      %b= label_content
    %dd.reference
      = model.public_send(association).public_send(association_name_attribute)
