-# Locals:
-#   form_builder:
-#   attribute:
-#   column_type (optional):
-#   # field_labels (optional):
-#   input_html_options (optional):

- input_html_options = {} unless local_assigns.key? :input_html_options

- model = form_builder.object
- klass = model.class

- unless local_assigns.key? :column_type
  -# It is assumed here that PseudoColumns module is included
  - column_type = klass.column_db_type(attribute)

- required = klass.attr_required?(attribute)
- readonly = klass.attr_readonly?(attribute)
- editable = model.attr_editable?(attribute)
- select_from = klass.possible_values_of(attribute)
- unless select_from.respond_to?(:size) && (select_size = select_from.size) <= 50
  - select_from = nil
- input_html_options[:required] = 'required' if required

.item.field
  %dt
    - human_name = klass.human_attribute_name(attribute)

    - case column_type
    - when :boolean
      - label_content = t('formats.attribute_name?', :attribute => human_name)
    - else
      - label_content = t('formats.attribute_name:', :attribute => human_name)

    - if editable
      = form_builder.label attribute, label_content
    - else
      %b= label_content

  - if editable
    - if select_from
      = form_builder.select attribute,
                            options_for_select(select_from,
                                               model.public_send(attribute)),
                            input_html_options
    - else
      - case column_type
      - when :boolean
        %dd.boolean
          = form_builder.check_box attribute, input_html_options
      - when :integer
        %dd.number
          = form_builder.number_field attribute, input_html_options
      - when :date
        -# Defined in my custom form builder
        %dd.date
          = form_builder.date_field attribute, input_html_options
      - when :datetime
        -# Defined in my custom form builder
        %dd.datetime
          = form_builder.local_datetime_field attribute, input_html_options
      - when :time
        -# Defined in my custom form builder
        %dd.time
          = form_builder.local_time_field attribute, input_html_options
      - when :text
        %dd.long_text
          = form_builder.text_area attribute, input_html_options
      - else
        %dd{:class => column_type}
          = form_builder.text_field attribute, input_html_options
  - else
    - value = model.public_send(attribute)

    - case column_type
    - when :boolean
      %dd.boolean
        = boolean_to_picto(value, size=2)
    - when :integer
      %dd.number
        = value
    - when :date
      %dd.boolean
        = l(value, :format => :long) if value
    - when :datetime
      %dd.boolean
        = l(value, :format => :custom) if value
    - when :time
      %dd.time
        - l(value, :format => :time_of_the_day) if value
    - else
      %dd{:class => column_type}
        = value
